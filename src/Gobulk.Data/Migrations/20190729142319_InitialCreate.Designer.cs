// <auto-generated />
using System;
using Gobulk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gobulk.Data.Migrations
{
    [DbContext(typeof(GobulkDbContext))]
    [Migration("20190729142319_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gobulk.Core.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountSubscription");

                    b.Property<string>("AlertEmailAddress");

                    b.Property<string>("AlertPhoneNumber");

                    b.Property<string>("ApiKey")
                        .HasMaxLength(512);

                    b.Property<DateTime>("ApiPasswordExpiresOn");

                    b.Property<string>("ApiPasswordHash")
                        .HasMaxLength(512);

                    b.Property<string>("CountryCode")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("IpnUri")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LongDescription");

                    b.Property<string>("Name");

                    b.Property<int?>("SettingId");

                    b.Property<string>("ShortDescription");

                    b.Property<int>("Status");

                    b.Property<int>("SubscriptionId");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("AccountId");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("SettingId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Gobulk.Core.Models.AuditLog", b =>
                {
                    b.Property<string>("AuditLogId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountId");

                    b.Property<DateTime>("CreatedOnUTCDateTime");

                    b.Property<string>("LoginMetaData");

                    b.HasKey("AuditLogId");

                    b.HasIndex("AccountId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivatedBy");

                    b.Property<DateTime?>("ActivatedOn");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("DeactivatedBy");

                    b.Property<DateTime?>("DeactivatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("FlagThumbnailUri");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.Property<string>("LongDescription");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.HasKey("CountryCode");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Currency", b =>
                {
                    b.Property<string>("CurrencyCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivatedBy");

                    b.Property<DateTime?>("ActivatedOn");

                    b.Property<string>("DeactivatedBy");

                    b.Property<DateTime?>("DeactivatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LongDescription");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("SymbolThumbnailUri");

                    b.HasKey("CurrencyCode");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivatedBy");

                    b.Property<DateTime?>("ActivatedOn");

                    b.Property<int>("Category");

                    b.Property<string>("CountryCode")
                        .IsRequired();

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("DeactivatedBy");

                    b.Property<DateTime?>("DeactivatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("EmailAddress");

                    b.Property<decimal>("FlatCommission");

                    b.Property<string>("ImageUri");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("ItemsUri")
                        .HasMaxLength(512);

                    b.Property<string>("LongDescription")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<decimal>("PercentageCommission");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ProductApiKey")
                        .HasMaxLength(512);

                    b.Property<string>("ProductUri")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("RequestJsonSchema");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("ThumbnailUri");

                    b.Property<int>("Type");

                    b.Property<string>("Website");

                    b.HasKey("ProductId");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Provider", b =>
                {
                    b.Property<string>("ProviderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivatedBy");

                    b.Property<DateTime?>("ActivatedOn");

                    b.Property<string>("CountryCode")
                        .IsRequired();

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("DeactivatedBy");

                    b.Property<DateTime?>("DeactivatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("EmailAddress");

                    b.Property<decimal>("FlatFee");

                    b.Property<string>("ImageUri");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsExternal");

                    b.Property<string>("LongDescription")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<decimal>("PercentageFee");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ProviderApiKey")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("ProviderUri")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("RequestJsonSchema");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("ThumbnailUri");

                    b.Property<int>("Type");

                    b.Property<string>("Website");

                    b.HasKey("ProviderId");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountType");

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LongDescription");

                    b.Property<decimal>("MaximumTransactionAmount");

                    b.Property<decimal>("MinimumBalance");

                    b.Property<decimal>("MinimumTransactionAmount");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("ShortDescription");

                    b.Property<int>("TransactionPlan");

                    b.Property<decimal>("TransactionPlanTotalAmount");

                    b.HasKey("SettingId");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountSubscription");

                    b.Property<int>("SettingId");

                    b.Property<string>("SubscriptionName");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("SettingId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Transaction", b =>
                {
                    b.Property<string>("TransactionId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AccountCommission");

                    b.Property<decimal>("AccountFee");

                    b.Property<string>("AccountId")
                        .IsRequired();

                    b.Property<decimal>("Amount");

                    b.Property<string>("BatchId");

                    b.Property<int>("Channel");

                    b.Property<string>("ChannelId")
                        .IsRequired();

                    b.Property<string>("ChannelReference");

                    b.Property<DateTime?>("CommitEndTime");

                    b.Property<string>("CommitId")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CommitStartTime");

                    b.Property<int>("CommitStatus");

                    b.Property<int>("CommitStatusCode");

                    b.Property<string>("CommitStatusMessage");

                    b.Property<string>("CountryCode")
                        .IsRequired();

                    b.Property<string>("CurrencyCode")
                        .IsRequired();

                    b.Property<decimal>("CustomerFee");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(255);

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("Metadata");

                    b.Property<DateTime?>("OrderEndTime");

                    b.Property<string>("OrderId")
                        .HasMaxLength(255);

                    b.Property<string>("OrderReference")
                        .IsRequired();

                    b.Property<DateTime?>("OrderStartTime");

                    b.Property<int>("OrderStatus");

                    b.Property<int>("OrderStatusCode");

                    b.Property<string>("OrderStatusMessage");

                    b.Property<DateTime?>("PaymentEndTime");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(255);

                    b.Property<string>("PaymentReference")
                        .IsRequired();

                    b.Property<DateTime?>("PaymentStartTime");

                    b.Property<int>("PaymentStatus");

                    b.Property<int>("PaymentStatusCode");

                    b.Property<string>("PaymentStatusMessage");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("ProductCommission");

                    b.Property<string>("ProductId")
                        .IsRequired();

                    b.Property<decimal>("ProviderFee");

                    b.Property<string>("ProviderId")
                        .IsRequired();

                    b.Property<bool>("RebateStatus");

                    b.Property<int>("RebateStatusCode");

                    b.Property<string>("RebateStatusMessage");

                    b.Property<decimal>("ReferralCommission");

                    b.Property<string>("RequestId")
                        .IsRequired();

                    b.Property<string>("RequestReference")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<string>("StatusMessage")
                        .IsRequired();

                    b.Property<DateTime?>("TransactionEndTime");

                    b.Property<DateTime>("TransactionStartTime");

                    b.Property<int>("Type");

                    b.Property<decimal>("Value");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CountryCode");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Account", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Setting")
                        .WithMany("Accounts")
                        .HasForeignKey("SettingId");

                    b.HasOne("Gobulk.Core.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gobulk.Core.Models.AuditLog", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Country", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Currency")
                        .WithMany("Countries")
                        .HasForeignKey("CurrencyCode");
                });

            modelBuilder.Entity("Gobulk.Core.Models.Product", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gobulk.Core.Models.Provider", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gobulk.Core.Models.Setting", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gobulk.Core.Models.Subscription", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gobulk.Core.Models.Transaction", b =>
                {
                    b.HasOne("Gobulk.Core.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gobulk.Core.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
